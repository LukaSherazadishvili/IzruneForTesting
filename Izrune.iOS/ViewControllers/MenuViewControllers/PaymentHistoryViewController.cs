// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Foundation;
using Izrune.iOS.CollectionViewCells;
using IZrune.PCL.Abstraction.Models;
using IZrune.PCL.Abstraction.Services;
using MPDCiOSPages.ViewControllers;
using UIKit;

namespace Izrune.iOS
{
	public partial class PaymentHistoryViewController : BaseViewController, IUICollectionViewDelegate, IUICollectionViewDataSource, IUICollectionViewDelegateFlowLayout
	{
		public PaymentHistoryViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("PaymentHistoryStoryboardId");

        List<IPaymentHistory> PaymentHistory;


        public async override void ViewDidLoad()
        {
            base.ViewDidLoad();

            InitCollectionViewSettings();

            //await LoadDataAsync();

        }

        private void InitCollectionViewSettings()
        {
            paymentHistoryCollectionView.Delegate = this;
            paymentHistoryCollectionView.DataSource = this;

            paymentHistoryCollectionView.RegisterNibForCell(PaymentHistoryCell.Nib, PaymentHistoryCell.Identifier);
        }

        public nint GetItemsCount(UICollectionView collectionView, nint section)
        {
            return 20;
        }

        public UICollectionViewCell GetCell(UICollectionView collectionView, NSIndexPath indexPath)
        {
            var cell = paymentHistoryCollectionView.DequeueReusableCell(PaymentHistoryCell.Identifier, indexPath) as PaymentHistoryCell;

            var data = PaymentHistory?[indexPath.Row];

            //cell.InitData(data);

            return cell;
        }

        [Export("collectionView:layout:sizeForItemAtIndexPath:")]
        public CoreGraphics.CGSize GetSizeForItem(UICollectionView collectionView, UICollectionViewLayout layout, NSIndexPath indexPath)
        {
            return new CoreGraphics.CGSize(collectionView.Frame.Width, 70);
        }

        private async Task LoadDataAsync()
        {
            var service = ServiceContainer.ServiceContainer.Instance.Get<IPaymentService>();

            ShowLoading();

            var data = (await service.GetPaymentHistory())?.ToList();

            PaymentHistory = data;

            paymentHistoryCollectionView.ReloadData();
            EndLoading();
        }
    }
}
