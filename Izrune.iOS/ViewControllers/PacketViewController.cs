// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using Foundation;
using Izrune.iOS.Utils;
using UIKit;

namespace Izrune.iOS
{
	public partial class PacketViewController : UIViewController
	{
		public PacketViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("PacketViewControllerStoryboardId");

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            SelectHeader();
            InitUI();

            InitGesture();
        }

        private bool IsIndividualSelected = true;

        private void InitUI()
        {
            viewForIndividual.Layer.CornerRadius = 19;
            viewForPromoCode.Layer.CornerRadius = 19;
        }

        private void InitGesture()
        {
            if(viewForIndividual.GestureRecognizers == null || viewForIndividual.GestureRecognizers.Length == 0)
            {
                viewForIndividual.AddGestureRecognizer(new UITapGestureRecognizer(() =>
                {
                    HeaderGesture(true);
                    //TODO Change Page
                }));
            }

            if (viewForPromoCode.GestureRecognizers == null || viewForPromoCode.GestureRecognizers.Length == 0)
            {
                viewForPromoCode.AddGestureRecognizer(new UITapGestureRecognizer(() =>
                {
                    HeaderGesture(false);
                    //TODO Change Page
                }));
            }
        }

        private void SelectHeader()
        {
            viewForIndividual.BackgroundColor = IsIndividualSelected ? AppColors.TitleColor : UIColor.Clear;
            individualLbl.TextColor = IsIndividualSelected ? UIColor.White : AppColors.UnselectedColor;

            viewForPromoCode.BackgroundColor = IsIndividualSelected ? UIColor.Clear : AppColors.TitleColor;
            promoLbl.TextColor = IsIndividualSelected ? AppColors.UnselectedColor : UIColor.White;
        }

        private void HeaderGesture(bool individualSelected)
        {
            IsIndividualSelected = individualSelected;
            SelectHeader();
        }
    }
}
