// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using IZrune.PCL.Abstraction.Models;
using MpdcViewExtentions;
using UIKit;
using System.Linq;
using XLPagerTabStrip;

namespace Izrune.iOS
{
	public partial class ExamResultViewController : UIViewController, IIndicatorInfoProvider
    {
		public ExamResultViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("ExamResultStoryboardId");

        public IQuisInfo QuisInfo;

        public IStudent Student;
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            InitUI();

            InitResult();
        }

        private void InitUI()
        {
            pointView.AddShadowToView(4, 48, 0.8f, UIColor.FromRGBA(0, 0, 0, 0.35f));
            timeShadowView.AddShadowToView(4, 48f, 0.8f, UIColor.FromRGBA(0, 0, 0, 0.35f));
        }

        private void InitResult()
        {

            if (!string.IsNullOrEmpty(QuisInfo?.DiplomaURl) && !string.IsNullOrWhiteSpace(QuisInfo.DiplomaURl))
                diplomeImageView.InitImageFromWeb(QuisInfo?.DiplomaURl, false, false);
            else
                diplomeImageView.Hidden = true;

            var ratingImages = ratingStackView.Subviews.Select(x => x as UIImageView);

            for (int i = 0; i < QuisInfo.QueisResult.Stars; i++)
            {
                ratingImages.ElementAt(i).Image = UIImage.FromBundle("1 – 24.png");
            }

            userNameLbl.Text = Student?.Name + " " + Student?.LastName;
            resultQualityLbl.Text = QuisInfo.QueisResult.text_title;
            resultTextLbl.Text = QuisInfo.QueisResult.text_description;

            totalPointLbl.Text = QuisInfo.QueisResult.Score;
            examTimeLbl.Text = FormatTimeSpan(TimeSpan.FromSeconds(QuisInfo.QueisResult.Duration));//$"{QuisInfo.QueisResult.Duration / 60}:{QuisInfo.QueisResult.Duration % 60}";

            finalResultLbl.Text = $"სწორი პასუხი {QuisInfo.QueisResult.RightAnswer}, არასწორი პასუხი {QuisInfo.QueisResult.WronAnswers} გამოტოვებული კითხვა {QuisInfo.QueisResult.SkipedAnswers}";
        }

        public IndicatorInfo IndicatorInfoForPagerTabStrip(PagerTabStripViewController pagerTabStripController)
        {
            return new IndicatorInfo("შედეგი");
        }

        private string FormatTimeSpan(TimeSpan time)
        {
            return ((time < TimeSpan.Zero) ? "-" : "") + time.ToString(@"mm\:ss");
        }
    }
}
