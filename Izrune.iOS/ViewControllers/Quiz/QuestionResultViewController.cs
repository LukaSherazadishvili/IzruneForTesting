// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using Foundation;
using Izrune.iOS.CollectionViewCells;
using IZrune.PCL.Abstraction.Models;
using MPDC.iOS.Utils;
using UIKit;
using XLPagerTabStrip;

namespace Izrune.iOS
{
	public partial class QuestionResultViewController : UIViewController, IUICollectionViewDelegate, IUICollectionViewDataSource, IUICollectionViewDelegateFlowLayout,IIndicatorInfoProvider
    {
		public QuestionResultViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("QuestionResultStoryboardId");

        public List<IFinalQuestion> FinalQuestions;

        public List<IQuestion> Questions;

        private float totalHeight;
        private float answersHeight;
        private float imagesHeight;

        public bool IsFromStatistic { get; set; } = true;

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            InitCollectionView();

            questionCollectionView.ReloadData();
        }

        public IndicatorInfo IndicatorInfoForPagerTabStrip(PagerTabStripViewController pagerTabStripController)
        {
            return new IndicatorInfo("კითხვები");
        }

        public nint GetItemsCount(UICollectionView collectionView, nint section)
        {
            return Questions?.Count??0;
        }

        public UICollectionViewCell GetCell(UICollectionView collectionView, NSIndexPath indexPath)
        {
            var cell = questionCollectionView.DequeueReusableCell(TestCollectionViewCell.Identifier, indexPath) as TestCollectionViewCell;

            cell.IsResultCell = true;

            var data = Questions?[indexPath.Row];

            cell.InitData(data, $"{indexPath.Row+1}) ");

            //cell.ShowBottomLine();

            return cell;
        }

        private void InitCollectionView()
        {
            questionCollectionView.RegisterNibForCell(TestCollectionViewCell.Nib, TestCollectionViewCell.Identifier);

            questionCollectionView.Delegate = this;
            questionCollectionView.DataSource = this;

        }

        [Export("collectionView:layout:sizeForItemAtIndexPath:")]
        public CoreGraphics.CGSize GetSizeForItem(UICollectionView collectionView, UICollectionViewLayout layout, NSIndexPath indexPath)
        {
            SetCellHeight(Questions?[indexPath.Row]);
            return new CoreGraphics.CGSize(collectionView.Frame.Width, totalHeight);
        }

        void SetCellHeight(IQuestion question)
        {
            totalHeight = 0;
            answersHeight = 0;

            var data = question;
            var text = data?.title;
            var titleHeight = text.GetStringHeight((float)questionCollectionView.Frame.Width, 50, 17);
            var commentHeight = data?.Description?.GetStringHeight((float)questionCollectionView.Frame.Width, 50, 17);
            var ImagesCount = data?.images?.Count();
            if (ImagesCount == 0)
            {
                imagesHeight = 0;
                //Debug.WriteLine($"ImagesCount : {ImagesCount}");
            }
            else 
                imagesHeight = 180;
                //Debug.WriteLine($"ImagesCount : {ImagesCount}");

            float spaceSumBetweenAnswers = 80;

            foreach (var item in data?.Answers)
            {
                var height = item.title.GetStringHeight((float)questionCollectionView.Frame.Width - 72, 72, 15);
                answersHeight += height + 40;
            }

            totalHeight = titleHeight + commentHeight.Value + imagesHeight + answersHeight + spaceSumBetweenAnswers;

            Debug.WriteLine($"{data?.Answers?.ElementAt(0)?.title} || Height {totalHeight}");
        }
    }
}
