// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Foundation;
using IZrune.PCL.Abstraction.Models;
using IZrune.PCL.Abstraction.Services;
using MPDCiOSPages.ViewControllers;
using MpdcViewExtentions;
using UIKit;

namespace Izrune.iOS
{
	public partial class StudentRegistrationViewController : BaseViewController
	{
		public StudentRegistrationViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("StudentRegistrationStoryboardId");

        private const int HeaderAndFooterHeight = 275;

        private StudentRegFirstViewController studentRegVc1;
        private StudentRegSecondViewController studentRegVc2;
        private AddStudentViewController AddMoreStudentVc;

        private int RegionId;
        private int SchoolId;

        private List<IRegion> CityList;

        private int CurrentIndex = 0;
        bool NextClicked = true;

        public async override void ViewDidLoad()
        {
            base.ViewDidLoad();

            InitUI();
            InitViewControllers();
            this.NavigationItem.BackBarButtonItem = new UIBarButtonItem("", UIBarButtonItemStyle.Plain, null);
            await LoadDataAsync();


            this.AddVcInViewWithoutFrame(viewForPeager, studentRegVc1);
            var scrollView = studentRegVc1.View.OfType<UIScrollView>().FirstOrDefault();
            scrollView.LayoutIfNeeded();

            SetContentHeight(scrollView.ContentSize.Height);
            View.LayoutIfNeeded();

            InitGestures();
        }

        private void InitUI()
        {
            nextBtn.Layer.CornerRadius = 25;
            backBtn.Layer.CornerRadius = 25;
        }

        private void AddViewController(UIViewController newVc, UIViewController oldVc)
        {
            oldVc.WillMoveToParentViewController(this);
            oldVc.View.RemoveFromSuperview();
            oldVc.RemoveFromParentViewController();

            var scrollView = newVc.View.OfType<UIScrollView>().FirstOrDefault();
            if (scrollView != null)
            {
                scrollView.LayoutIfNeeded();
            }

            this.AddVcInViewWithoutFrame(viewForPeager, newVc);

            SetContentHeight(scrollView.ContentSize.Height);
        }

        private void SetContentHeight(nfloat scrollviewContentHeight)
        {

            UIEdgeInsets safeAreaSize = new UIEdgeInsets();

            if (UIDevice.CurrentDevice.CheckSystemVersion(11, 0))
            {
                safeAreaSize = UIApplication.SharedApplication.KeyWindow.SafeAreaInsets;
            }

            var currentContentHeight = this.View.Frame.Height - (HeaderAndFooterHeight + safeAreaSize.Top + safeAreaSize.Bottom);
            var diffrenceWithContents = currentContentHeight - scrollviewContentHeight;

            if (diffrenceWithContents >= 0)
            {
                subViewsContentHeightConstraint.Constant = currentContentHeight;

            }

            else
            {
                subViewsContentHeightConstraint.Constant = scrollviewContentHeight;

            }

            View.LayoutIfNeeded();

            viewForPeager.Frame = new CoreGraphics.CGRect(viewForPeager.Frame.X, viewForPeager.Frame.Y,
                viewForPeager.Frame.Width, subViewsContentHeightConstraint.Constant);

            View.LayoutIfNeeded();
        }

        private async Task LoadDataAsync()
        {
            ShowLoading();
            HideHeaderAndFooter(true);
            var service = ServiceContainer.ServiceContainer.Instance.Get<IRegistrationServices>();

            try
            {
                CityList = (await service.GetRegionsAsync())?.OrderBy(x => x.title)?.ToList();
                studentRegVc2.CityList = CityList;
                studentRegVc2.CityList = CityList;
                HideHeaderAndFooter(false);
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine(ex.Message);
            }

            finally
            {
                EndLoading();
            }

        }

        private void HideHeaderAndFooter(bool hide)
        {
            nextBtn.Hidden = hide;
            footerView.Hidden = hide;
            headerView.Hidden = hide;
        }

        private void InitViewControllers()
        {
            studentRegVc1 = Storyboard.InstantiateViewController(StudentRegFirstViewController.StoryboardId) as StudentRegFirstViewController;

            studentRegVc2 = Storyboard.InstantiateViewController(StudentRegSecondViewController.StoryboardId) as StudentRegSecondViewController;

            studentRegVc2.SchoolSelected = (school) =>
            {
                SchoolId = school.id;
            };

            studentRegVc2.CitySelected = () => {

            };

            AddMoreStudentVc = Storyboard.InstantiateViewController(AddStudentViewController.StoryboardId) as AddStudentViewController;
            AddMoreStudentVc.HideFooter = true;
            AddMoreStudentVc.AddMoreStudentClicked = () =>
            {
                //TODO
                studentRegVc1 = Storyboard.InstantiateViewController(StudentRegFirstViewController.StoryboardId) as StudentRegFirstViewController;

                studentRegVc2 = Storyboard.InstantiateViewController(StudentRegSecondViewController.StoryboardId) as StudentRegSecondViewController;

                studentRegVc2.SchoolSelected = (school) =>
                {
                    SchoolId = school.id;
                };

                studentRegVc2.CitySelected = () => {

                };

                CurrentIndex = 0;
                AddViewController(studentRegVc1, AddMoreStudentVc);
            };
        }

        private void GetCurrentPage(int pageIndex)
        {

            switch (pageIndex)
            {
                case 0:
                    {
                        if (NextClicked)
                        {
                            var res = studentRegVc1.IsFormFilled();

                            if (res)
                            {
                                AddViewController(studentRegVc2, studentRegVc1);
                                CurrentIndex++;
                                studentRegVc1.SendClicked?.Invoke();
                            }

                            else
                            {
                                ShowAlert();
                                CurrentIndex = 0;
                            }
                        }
                        break;
                    }
                case 1:
                    {
                        if (NextClicked)
                        {
                            var res = studentRegVc2.IsFormFilled();

                            if (res)
                            {
                                AddViewController(AddMoreStudentVc, studentRegVc2);
                                CurrentIndex++;
                                studentRegVc2.SendClicked?.Invoke();
                            }

                            else
                            {
                                ShowAlert();
                                CurrentIndex = 1;
                            }

                        }
                        else
                        {
                            AddViewController(studentRegVc1, studentRegVc2);
                            CurrentIndex--;
                        }
                        break;
                    }
                case 2:
                    {
                        if (NextClicked)
                        {
                            try
                            {
                                IZrune.PCL.Helpers.UserControl.Instance.AddStudent();
                                ShowSuccsessAlert();
                            }
                            catch (Exception ex)
                            {
                                System.Diagnostics.Debug.WriteLine(ex.Message);
                            }

                        }
                        else
                        {
                            AddViewController(AddMoreStudentVc, studentRegVc2);
                            CurrentIndex--;
                        }
                        break;
                    }
                default:
                    break;
            }

        }

        private void ShowAlert()
        {
            var alertVc = UIAlertController.Create("ყურადღება!", "აუცილებელია *-ით აღნიშნული ველების შევსება", UIAlertControllerStyle.Alert);
            alertVc.AddAction(UIAlertAction.Create("დახურვა", UIAlertActionStyle.Default, null));
            this.PresentViewController(alertVc, true, null);
        }

        private void ShowSuccsessAlert()
        {
            var alertVc = UIAlertController.Create("ყურადღება!", "მოსწავლე წარმატებით დაემატა", UIAlertControllerStyle.Alert);
            alertVc.AddAction(UIAlertAction.Create("დახურვა", UIAlertActionStyle.Default, (obj) => { this.NavigationController.PopViewController(true); }));
            this.PresentViewController(alertVc, true, null);
        }

        private void InitGestures()
        {
            nextBtn.TouchUpInside += delegate
            {
                NextClicked = true;
                GetCurrentPage(CurrentIndex);
                //CurrentIndex++;
                CheckIndex();

            };

            backBtn.TouchUpInside += delegate {

                NextClicked = false;
                GetCurrentPage(CurrentIndex);
                //CurrentIndex--;
                CheckIndex();

            };
        }

        private void CheckIndex()
        {
            nextBtn.Enabled = CurrentIndex < 3;
            backBtn.Enabled = CurrentIndex > 0;
        }
    }
}
