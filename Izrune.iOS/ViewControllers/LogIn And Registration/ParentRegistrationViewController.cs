// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using Foundation;
using Izrune.iOS.Utils;
using MpdcViewExtentions;
using UIKit;

namespace Izrune.iOS
{
	public partial class ParentRegistrationViewController : UIViewController
	{
		public ParentRegistrationViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("ParentRegistrationStoryboardId");

        UIViewController[] RegistrationPages;

        private bool isFirstPage = true;
        private ParentRegiFirstViewController parentRegVc;
        private ParentRegSecondViewController parent2RegVc;

        private StudentRegFirstViewController studentRegVc1;
        private StudentRegSecondViewController studentRegVc2;

        private PacketViewController choosePacketVc;
        private int CurrentIndex = 0;

        /*
         * 
         * UserControl RegisterParent(student)Part1-2
         * 
         * IregisterService RegisterInfo for dropdown
         * 
         * User Control GetPromoCode
        */
         

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            InitViewControllers();

            this.AddVcInView(viewForPager, parentRegVc);

            InitUI();

            InitGestures();
        }

        private void InitViewControllers()
        {
            parentRegVc = Storyboard.InstantiateViewController(ParentRegiFirstViewController.StoryboardId) as ParentRegiFirstViewController;

            parent2RegVc = Storyboard.InstantiateViewController(ParentRegSecondViewController.StoryboardId) as ParentRegSecondViewController;

            studentRegVc1 = Storyboard.InstantiateViewController(StudentRegFirstViewController.StoryboardId) as StudentRegFirstViewController;

            studentRegVc2 = Storyboard.InstantiateViewController(StudentRegSecondViewController.StoryboardId) as StudentRegSecondViewController;

            choosePacketVc = Storyboard.InstantiateViewController(PacketViewController.StoryboardId) as PacketViewController;
        }

        bool NextClicked = true;

        private void InitGestures()
        {
            nextBtn.TouchUpInside += delegate
            {
                NextClicked = true;
                GetCurrentPage(CurrentIndex);
                CurrentIndex++;
                CheckIndex();
            };

            prewBtn.TouchUpInside += delegate {
                NextClicked = false;
                GetCurrentPage(CurrentIndex);
                CurrentIndex--;
                CheckIndex();
            };
        }

        private void AddViewController(UIViewController newVc, UIViewController oldVc)
        {
            oldVc.WillMoveToParentViewController(this);
            oldVc.View.RemoveFromSuperview();
            oldVc.RemoveFromParentViewController();

            this.AddVcInView(viewForPager, newVc);
        }

        //private void AddFirstVc()
        //{
        //    parent2RegVc.WillMoveToParentViewController(this);
        //    parent2RegVc.View.RemoveFromSuperview();
        //    parent2RegVc.RemoveFromParentViewController();

        //    this.AddVcInView(viewForPager, parentRegVc);
        //}

        private void InitUI()
        {
            nextBtn.Layer.CornerRadius = 25;
            prewBtn.Layer.CornerRadius = 25;

            nextBtn.AddShadowToView(5, 25, 0.8f, AppColors.TitleColor);
        }

        private void CheckIndex()
        {
            nextBtn.Enabled = CurrentIndex < 5;
            prewBtn.Enabled = CurrentIndex > 0;
        }

        private void GetCurrentPage(int pageIndex)
        {
            switch (pageIndex)
            {
                case 0:
                    {
                        if (NextClicked)
                        {
                            AddViewController(parent2RegVc, parentRegVc);
                            parentRegVc.SendClicked?.Invoke();
                        }
                        break;
                    }
                case 1:
                    {
                        if (NextClicked)
                        {
                            AddViewController(studentRegVc1, parent2RegVc);
                            parent2RegVc.SendClicked?.Invoke();
                        }
                        else
                            AddViewController(parentRegVc, parent2RegVc);
                        break;
                    }
                case 2:
                    {
                        if (NextClicked)
                        {
                            AddViewController(studentRegVc2, studentRegVc1);
                            studentRegVc1.SendClicked?.Invoke();
                        }
                        else
                            AddViewController(parent2RegVc, studentRegVc1);
                        break;
                    }
                case 3:
                    {
                        if (NextClicked)
                        {
                            AddViewController(choosePacketVc, studentRegVc2);
                            studentRegVc2.SendClicked?.Invoke();
                        }
                        else
                            AddViewController(studentRegVc1, studentRegVc2);
                        break;
                    }
                case 4:
                    {
                        if (NextClicked)
                            AddViewController(parent2RegVc, parentRegVc);
                        else
                            AddViewController(parentRegVc, parent2RegVc);
                        break;
                    }
                case 5:
                    {
                        if (NextClicked)
                            AddViewController(parent2RegVc, parentRegVc);
                        else
                            AddViewController(parentRegVc, parent2RegVc);
                        break;
                    }
                default:
                    break;
            }
        }



    }
}