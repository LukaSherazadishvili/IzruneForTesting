// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using MpdcViewExtentions;
using IZrune.PCL.Helpers;
using IZrune.PCL.Abstraction.Models;
using IZrune.PCL.Abstraction.Services;
using MPDCiOSPages.ViewControllers;
using MPDC.iOS.Utils;

namespace Izrune.iOS
{
	public partial class ChangePasswordViewController : BaseViewController
	{
		public ChangePasswordViewController (IntPtr handle) : base (handle)
		{
		}

        public static readonly NSString StoryboardId = new NSString("ChangePasswordStoryboardId");
        private IParent user;

        public async override void ViewDidLoad()
        {
            base.ViewDidLoad();
            if (Plugin.Connectivity.CrossConnectivity.Current.IsConnected)
                user = await UserControl.Instance.GetCurrentUser();
            else
                this.ShowConnectionAlert();

            InitUI();

            InitGestures();
        }

        private void InitGestures()
        {
            saveBtn.TouchUpInside += async delegate
            {
                if (Plugin.Connectivity.CrossConnectivity.Current.IsConnected)
                {
                    var userService = ServiceContainer.ServiceContainer.Instance.Get<IUserServices>();

                    try
                    {
                        if (CheckPassword())
                        {
                            ShowLoading();
                            var result = await userService.EditePassword(oldPassTf.Text, passwordNewTf.Text);
                            EndLoading();
                            ShowAlert("პაროლი წარმატებით შეიცვალა");
                        }
                        else
                            ShowAlert("სცადეთ თავიდან");
                    }
                    catch (Exception ex)
                    {
                        ShowAlert("სცადეთ თავიდან");
                    }
                }
                else
                {
                    this.ShowConnectionAlert();

                }

            };

            backBtn.TouchUpInside += delegate {

                this.NavigationController.PopViewController(true);
            };
        }

        private void InitUI()
        {
            InitTF(oldPassTf, oldPassView);
            InitTF(passwordNewTf, passNewView);
            InitTF(repeatNewPasswordTf, repeatNewPassView);

            backBtn.Layer.CornerRadius = 25;
            saveBtn.Layer.CornerRadius = 25;
        }

        private void InitTF(UITextField textField, UIView view)
        {
            textField.Layer.BorderWidth = 2;
            textField.Layer.BorderColor = UIColor.White.CGColor;

            textField.MakeRoundedTextField(25, UIColor.FromRGB(243,243,243), 20);
            view.AddShadowToView(3, 25, 0.3f, UIColor.FromRGBA(0, 0, 0, 0.25f));
        }

        private bool CheckPassword()
        {
            return (passwordNewTf.Text == repeatNewPasswordTf.Text);
        }

        private void ShowAlert(string message)
        {
            var alertVc = UIAlertController.Create("ყურადღება!", message, UIAlertControllerStyle.Alert);
            alertVc.AddAction(UIAlertAction.Create("დახურვა", UIAlertActionStyle.Default, (obj) => this.NavigationController.PopViewController(true)));
            this.PresentViewController(alertVc, true, null);
        }
    }
}
